on:
  push:
    #
    # For push events to refs/tags matching the pattern
    # 'release/*' - i.e. 'release/6.0.2.1', 'release/bogus'
    #
    tags:
    - 'release/*'

jobs:
  #
  # Build and release debian package on Github.
  # Note that we require Python 3 to be installed
  # for # the Python bindings to be compiled in
  # the package.
  #
  deb-build-test-release:
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v1
        with:
          python-version: '3.6'
      - name: Install debian utilities
        run: sudo apt-get install -y debhelper devscripts equivs
      - name: Build dependencies non-interactively
        run: sudo mk-build-deps --install --tool='apt-get -o Debug::pkgProblemResolver=yes --no-install-recommends --yes' debian/control
      - name: Build and generate package
        run: dpkg-buildpackage -b -us -uc
      - name: Print generated artifacts
        run: ls -lh ..
      - name: Detect binary package name
        run: |
          path=$(ls ../libkdumpfile_*deb)
          echo "::set-env name=DEBIAN_PACKAGE_PATH::$path"
          echo "::set-env name=DEBIAN_PACKAGE_NAME::$(basename $path)"
      - name: Detect debug package name
        run: |
          path=$(ls ../libkdumpfile-dbgsym_*ddeb)
          echo "::set-env name=DDEBIAN_PACKAGE_PATH::$path"
          echo "::set-env name=DDEBIAN_PACKAGE_NAME::$(basename $path)"
      - name: Print package names
        run: |
          echo $DEBIAN_PACKAGE_PATH $DDEBIAN_PACKAGE_PATH
          echo ${{ env.DEBIAN_PACKAGE_PATH }} ${{ env.DDEBIAN_PACKAGE_PATH }}
          echo $DEBIAN_PACKAGE_NAME $DDEBIAN_PACKAGE_NAME
          echo ${{ env.DEBIAN_PACKAGE_NAME }} ${{ env.DDEBIAN_PACKAGE_NAME }}
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload debian package
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          #
          # Github note:
          #   This pulls from the CREATE RELEASE step above, referencing it's
          #   ID to get its outputs object, which include a `upload_url`. See
          #   this blog post for more info:
          #   https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          #
          # For available content-types see:
          # https://www.iana.org/assignments/media-types/media-types.xhtml
          #
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.DEBIAN_PACKAGE_PATH }}
          asset_name: ${{ env.DEBIAN_PACKAGE_NAME }}
          asset_content_type: application/vnd.debian.binary-package
      - name: Upload debian debug package
        id: upload-release-asset-2
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          #
          # See comment of similar code above.
          #
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.DDEBIAN_PACKAGE_PATH }}
          asset_name: ${{ env.DDEBIAN_PACKAGE_NAME }}
          asset_content_type: application/vnd.debian.binary-package
